<?php

/**
 * @file
 * Install, update and uninstall functions for the Search API ET module.
 */

/**
 * Implements hook_schema().
 */
function search_api_et_schema() {
  $schema['search_api_et_item'] = array(
    'description' => 'Stores the items which should be indexed for each index, and their status.',
    'fields' => array(
      'item_id' => array(
        'description' => "The item's ID, with language prefix.",
        'type' => 'varchar',
        'length' => 53,
        'not null' => TRUE,
      ),
      'index_id' => array(
        'description' => 'The {search_api_index}.id this item belongs to.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'changed' => array(
        'description' => 'Either a flag or a timestamp to indicate if or when the item was changed since it was last indexed.',
        'type' => 'int',
        'size' => 'big',
        'not null' => TRUE,
        'default' => 1,
      ),
    ),
    'indexes' => array(
      'indexing' => array('index_id', 'changed'),
    ),
    'primary key' => array('item_id', 'index_id'),
  );

  return $schema;
}

/**
 * Implements hook_disable().
 *
 * Yes it's true, normally we should delete indexes only when module is being
 * uninstalled, not just disabled, however if we keep those indexes after
 * disabling the module, they will still be displayed on Search API index
 * listing page, and each click on any of such index-related links will end up
 * with SearchApiException, which would be better to avoid.
 */
function search_api_et_disable() {
  module_load_include('inc', 'search_api_et', 'property_info_alter');
  $deleted_indexes = array();
  foreach (search_api_index_load_multiple(FALSE) as $index) {
    $controller = search_api_get_datasource_controller($index->item_type);
    if ($controller instanceof SearchApiEtDatasourceController) {
      // @TODO: What would happen if an index is defined in a feature?
      // Will we be able to delete it? Should we disable if first just in case
      // before trying to delete?
      search_api_index_delete($index->id);
      $deleted_indexes[] = $index->name;
    }
  }
  if (!empty($deleted_indexes)) {
    drupal_set_message(t('The following Search API indexes were deleted: @indexes.', array(
      '@indexes' => implode(', ', $deleted_indexes),
    )), 'warning');
  }
}

/**
 * Implements hook_uninstall().
 */
function search_api_et_uninstall() {
  variable_del('search_api_tasks');
}
